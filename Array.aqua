//from Collection
//const int len, map(), reduce(), filter(), etc
class Array<T> : Collection<T>{
    
	private	Pointer<T> data

    const int MAX_LEN = int.MAX

    Array() => this(0)
    
    Array(int length){
        len = length
		checkLen()
        data = allocNew(length)
    }
    
    /* Array.move(Array<T> $arr){
		len = arr.len
		data = arr.data
	} */
	
    Array.raw(int length){
        len = length
		checkLen()
        data = alloc(length)
    }
    
    Array(Iterable<T> iter){
        new.raw(iter.len)
		for (i, value : iter)data[i] = value
    }
    
    _[](int index){
        if (index<0)index+=len
        checkIndex(index)
        return data[index]
    }
    
	_+(Iterable<T> iter) {
		result = new(len+iter.len)
		for (i:len)result.data[i] = data[i]
		for (i:iter.len)result.data[len+i] = iter.iterate(i)
		return $result
	}

	:str{
		s = "["
		for (i:len-1){
			s += data[i]
			s += ", "
		}
		if (len)s += data[len - 1]
		s += "]"
		return $s
	}
	
	iterate(int index)=>data[index]

}